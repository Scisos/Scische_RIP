from random import randint, choice
import pygame
window = pygame.display.set_mode((700, 500))
pygame.display.set_caption("pinpon")
av_time = pygame.time.Clock()
FPS = 60
pygame.font.init()
v_font = pygame.font.SysFont("Arial", 70)
m_font = pygame.font.SysFont("Arial", 20)
backgroun = pygame.transform.scale(pygame.image.load("background.jpg"), (700, 500))
win_r = v_font.render('RED WON!', True, (252, 3, 3))
win_l = v_font.render('PURPLE WON!', True, (140, 0, 255))
class GameSprite(pygame.sprite.Sprite):
    def __init__(self, speed_y, speed_x, pl_image, x, y, s1, s2):
        super().__init__()
        self.speed_y = speed_y
        self.speed_x = speed_x
        self.pl_image = pygame.transform.scale(pygame.image.load(pl_image), (s1, s2))
        self.rect = self.pl_image.get_rect()
        self.rect.x = x
        self.rect.y = y

    def reset(self):
        window.blit(self.pl_image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_R(self):
        keys = pygame.key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed_y
        if keys[K_DOWN] and self.rect.y < 420:
            self.rect.y += self.speed_y
        self.reset()

    def update_L(self):
        keys = pygame.key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < 420:
            self.rect.y += self.speed
        self.reset()
    
class Ball(GameSprite):
    def bump_l_r(self, rocket_speed):
        self.speed_x = self.speed_x*(-1)
        self.speed_y = self.speed_y+(rocket_speed/2)
    def bump_u_d(self):
        self.speed_y = self.speed_y*(-1)
    def update(self):
        self.rect.y += self.speed_y
        self.rect.x += self.speed_x 
        self.reset()
    
rocket_l = Player(6, 0, "purple_rocket.png", 5, 240, 20, 50)
rocket_r = Player(6, 0, "red_rocket.png", 480, 240, 25, 50)
b_start_speed = (4, -4)
ball = Ball(3, choice(b_start_speed), 'tennis.png',337, 237, 26, 26)




count_r = 0
count_l = 0
rel_time = False
game = True
finish = False
while game:
    skipped_l = m_font.render('Очки:'+str(count_l), True, (252, 3, 3))
    skipped_r = m_font.render('Очки:'+str(count_r), True, (140, 0, 255))
    window.blit(backgroun, (0,0))
    keys = pygame.key.get_pressed()

    for i in pygame.event.get():
        if i.type == pygame.QUIT:
            game = False
    if finish != True:
        if ball.rect.x > 750:
            count_l += 1
            finish = True
        elif ball.rect.x < 0:
            count_r += 1
            finish = True
        else:
            if pygame.sprite.collide_rect(ball, rocket_l) and keys[pygame.K_w]:
                ball.bump_l_r(-rocket_l.speed_y)
            elif pygame.sprite.collide_rect(ball, rocket_l) and keys[pygame.K_s]:
                ball.bump_l_r(rocket_l.speed_y)
            elif pygame.sprite.collide_rect(ball, rocket_r) and keys[pygame.K_UP]:
                ball.bump_l_r(-rocket_r.speed_y)
            elif pygame.sprite.collide_rect(ball, rocket_l) and keys[pygame.K_DOWN]:
                ball.bump_l_r(rocket_r.speed_y)
            elif pygame.sprite.collide_rect(ball, rocket_r) and not(keys[pygame.K_DOWN] or keys[pygame.K_UP]):
                ball.bump_l_r(0)
            elif pygame.sprite.collide_rect(ball, rocket_l) and not(keys[pygame.K_w] or keys[pygame.K_s]):
                ball.bump_l_r(0)

            ball.update()
            rocket_l.update()
            rocket_r.update()
            pygame.display.update()
            av_time.tick(FPS)
            if count_l >= 3 or count_r >= 3:
                finish = True

    else:

            if count_l >= 3:
                window.blit(win_l,(200, 200))
            else:
                window.blit(win_r, (200, 200))
            
            if keys[pygame.K_SPACE]:
                finish = False
                count_r = 0
                count_l = 0

                rocket_l.rect.x = 5
                rocket_l.rect.y = 240
                rocket_r.rect.x = 480
                rocket_r.rect.y = 240
                rocket_l.update()
                rocket_r.update()
                ball.rect.x = 337
                ball.rect.y = 237
                ball.update()
                pygame.display.update()
